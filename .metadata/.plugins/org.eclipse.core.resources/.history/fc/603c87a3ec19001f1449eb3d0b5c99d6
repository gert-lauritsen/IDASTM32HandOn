/*
 * TMP102.c
 *
 *  Created on: May 24, 2024
 *      Author: gert
 */
#include "TMP102.h"


I2C_HandleTypeDef *defaultHandle;
uint8_t DefaultBaseAdress;

bool InitTmp102(I2C_HandleTypeDef *Handle, uint8_t BaseAdress) {
	DefaultBaseAdress =	BaseAdress;
	defaultHandle     = Handle;
	return true;
}

bool ReadTemperature(float *temp_c;) {
	HAL_StatusTypeDef ret;
	// Tell TMP102 that we want to read from the temperature register
    buf[0] = REG_TEMP;
    ret = HAL_I2C_Master_Transmit(&hi2c1, TMP102_ADDR, buf, 1, HAL_MAX_DELAY);
    if ( ret = HAL_OK) {
    	ret = HAL_I2C_Master_Receive(&hi2c1, TMP102_ADDR, buf, 2, HAL_MAX_DELAY);
        if ( ret = HAL_OK) {
            //Combine the bytes
            val = ((int16_t)buf[0] << 4) | (buf[1] >> 4);

            // Convert to 2's complement, since temperature can be negative
            if ( val > 0x7FF ) {
              val |= 0xF000;
            }

            // Convert to float temperature value (Celsius)
            *temp_c = val * 0.0625;

            // Convert temperature to decimal format
            *temp_c *= 100;
        }

    }

}
